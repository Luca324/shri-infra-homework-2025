name: Release
on: [workflow_dispatch]

jobs:
    lint:
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v4
          - name: Use Node.js
            uses: actions/setup-node@v4
            with:
              node-version: '20.x'
              cache: 'npm'
          - name: Install deps
            run: npm ci
          - name: Lint
            run: npm run lint
            

    test:
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v4
          - name: Use Node.js
            uses: actions/setup-node@v4
            with:
              node-version: '20.x'
              cache: 'npm'
          - name: Install deps
            run: npm ci
          - name: Test
            run: npm run test


    create-branch:
      needs: [lint, test]
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Получить всю историю (нужно для создания веток)

      - name: Create and push branch
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git branch releases/${{ github.run_number }}
          git push origin releases/${{ github.run_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Авторизация


    build-and-push:
      needs: [lint, test]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        
        - name: Login to Yandex Container Registry
          run: |
            echo ${{ secrets.OAUTH_TOKEN }} | docker login \
              --username oauth \
              --password-stdin \
              cr.yandex

        - name: Build and tag Docker image
          run: |
            docker build . \
              -f Dockerfile \
              -t cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.run_number }} \
              -t cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.run_number }}_latest

        - name: Push Docker images
          run: |
            docker push cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.run_number }}
            docker push cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.run_number }}_latest
    create-tag:
      needs: [lint, test]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
        
        - name: Create release tag
          run: |
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git tag -a v${{ github.run_number }} -m "Release ${{ github.run_number }}"
            git push origin v${{ github.run_number }}
    create-release-issue:
      needs: [lint, test]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
        
        - name: Get commit history
          id: changelog
          run: |
            LAST_TAG=$(git describe --tags --abbrev=0 || echo "")
            if [ -z "$LAST_TAG" ]; then
              COMMITS=$(git log --pretty=format:"- %h %s (%an)")
            else
              COMMITS=$(git log $LAST_TAG..HEAD --pretty=format:"- %h %s (%an)")
            fi
            echo "commits<<EOF" >> $GITHUB_OUTPUT
            echo "$COMMITS" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT

        - name: Create release issue
          uses: actions/github-script@v6
          with:
            script: |
              const { data: issue } = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `Release v${{ github.run_number }}`,
                body: `
                  **Release Information**
                  - Date: ${new Date().toISOString()}
                  - Author: ${{ github.actor }}
                  - Version: ${{ github.run_number }}
                  
                  **Docker Image**
                  - \`cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.run_number }}\`
                  - \`cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.run_number }}_latest\`
                  
                  **Changes since last release:**
                  ${process.env.COMMITS || 'No changes detected'}
                  
                `,
                labels: ['release']
              });
              console.log(`Created issue: ${issue.html_url}`);
          env:
            COMMITS: ${{ steps.changelog.outputs.commits }}

            