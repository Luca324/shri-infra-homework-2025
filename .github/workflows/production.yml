name: Production
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version to run (e.g. 123)'
        required: true
        type: string

jobs:
  check-image:
    runs-on: ubuntu-latest
    steps:
      - name: Login into docker
        run: |
            ssh -i ${{ secrets.OPENSSH_PRIVATE_KEY }} ${{ secrets.PUBLIC_IP }}
            echo "${{ secrets.OAUTH_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex

      - name: Check if image exists in Container Registry
        run: |
          if docker manifest inspect cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest > /dev/null 2>&1; then
            echo "Image exists"
          else
            echo "Image does not exist"
            exit 1
          fi
      
  run-docker:
    needs: check-image
    runs-on: ubuntu-latest
    steps:
      - name: Login into docker
        run: |
            ssh -i ${{ secrets.OPENSSH_PRIVATE_KEY }} ${{ secrets.PUBLIC_IP }}
            echo "${{ secrets.OAUTH_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex

      - name: Run Docker
        run: |
            docker pull cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest
            docker run -d -p 80:3000 cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest
  
  comment-release-issue:
    runs-on: ubuntu-latest
    steps:
      
      - name: Set current date
        id: date
        run: echo "current_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Find Release Issue
        id: find-issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_ID=$(gh issue list --search "Release v${{ github.event.inputs.release_version }}" --json number -q '.[0].number')
          echo "issue_id=$ISSUE_ID" >> $GITHUB_OUTPUT

      - name:  Add comment to Release Issue
        env:
          CURRENT_DATE: ${{ steps.date.outputs.current_date }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMENT="**Release in production**
          - **Date**: $CURRENT_DATE
          - **Author**: ${{ github.actor }}
          "

          gh issue comment ${{ steps.find-issue.outputs.issue_id }} --body "$COMMENT"
